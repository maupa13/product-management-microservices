# Docker Compose Configuration for Orchestrating Multiple Docker Containers
#
# This docker-compose.yaml file is used to define a multi-container Docker application
# consisting of three services: supplierservice, consumerservice and db-consumer.
#
# Three Docker services:
# supplierservice: This service represents the supplier service container. It is built
# from the Dockerfile located in the ./supplier-service directory. It exposes port 8081
# on the host and depends on the db-consumer service. It is configured with environment
# variables for connecting to the PostgreSQL database container.
#
# consumerservice: This service represents the consumer service container. It is built
# from the Dockerfile located in the ./consumer-service directory. It exposes port 8083
# on the host and depends on the supplierservice service. It is part of the proxy.network
# Docker network.
#
# db-consumer: This service represents the PostgreSQL database container for the consumer
# service. It uses the official PostgreSQL Docker image 'postgres:13.1-alpine'. It exposes
# port 5432 on the host and is configured with environment variables for initializing the
# PostgreSQL database.
#
# The networks section defines a custom Docker network named 'proxy.network' with the bridge
# driver. Both the supplierservice and db-consumer services are part of this network to enable
# communication between them.
version: '3.8'

services:
  supplierservice:
    container_name: supplier-service
    build: ./supplier-service
    ports:
      - "8081:8081"
    depends_on:
      - db-consumer
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: db
    networks:
      - proxy.network

  consumerservice:
    container_name: consumer-service
    build: ./consumer-service
    ports:
      - "8083:8083"
    depends_on:
      - supplierservice
    networks:
      - proxy.network

  db-consumer:
    container_name: db-consumer
    image: 'postgres:13.1-alpine'
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - proxy.network

networks:
  proxy.network:
    driver: bridge